<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Innerclasses on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/innerclasses/</link>
    <description>Recent content in Innerclasses on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Tue, 12 Mar 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.brainbaking.com/tags/innerclasses/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>innerclasses</title>
      <link>http://www.brainbaking.com/wiki/code/java/dynamica/innerclasses/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/java/dynamica/innerclasses/</guid>
      <description>code:java:dynamica &amp;gt;&amp;gt; Innerclasses Java is geen dynamische taal maar je kan wel gebruik maken van een aantal handige trucjes om duplicatie te vermijden. Bijvoorbeeld om state bij te houden en de implementatie zelf in een inner klasse te voorzien:
private interface CrmEndpointWorker { void call(Holder&amp;lt;Status&amp;gt; status, Holder&amp;lt;String&amp;gt; result); } public CrmImportGatewayAction forCreation() { return new CrmImportGatewayAction(Action.CREATE); } public CrmImportGatewayAction forUpdating() { return new CrmImportGatewayAction(Action.UPDATE); } public CrmImportGatewayAction forDeletion() { return new CrmImportGatewayAction(Action.</description>
    </item>
    
  </channel>
</rss>