<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linking on Brain Baking</title>
    <link>https://brainbaking.com/tags/linking/</link>
    <description>Recent content in Linking on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Wed, 26 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brainbaking.com/tags/linking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>linking</title>
      <link>https://brainbaking.com/wiki/code/c/linking/</link>
      <pubDate>Wed, 26 Mar 2014 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/code/c/linking/</guid>
      <description>Linking obj/dlls Probleemstelling: verschillende solutions, code over solutions heen willen gebruiken.
Dit compileert by default altijd, maar tijdens het linken van de gecompileerde files loopt het mis. Waarom? Omdat er geen dllexport voorzien is.  Op te lossen:
#ifndef RESOURCE_UTILS_H #define RESOURCE_UTILS_H #include &amp;quot;Utility.h&amp;quot; #ifdef _DLL #define DllExImport __declspec(dllexport) #else #define DllExImport __declspec(dllimport) #endif class DllExImport ResourceUtils { public: static RAIIObject&amp;lt;HICON&amp;gt; getIcon(int resourceId); static RAIIObject&amp;lt;HICON&amp;gt; getIcon(HINSTANCE resourceHandleInstance, int resourceId); private: ResourceUtils() {} }; #endif  in de cpp file hoeft niets speciaal meer te staan.</description>
    </item>
    
  </channel>
</rss>