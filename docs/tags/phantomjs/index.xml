<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phantomjs on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/phantomjs/index.xml</link>
    <description>Recent content in Phantomjs on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <atom:link href="http://www.brainbaking.com/tags/phantomjs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>phantomjs</title>
      <link>http://www.brainbaking.com/wiki/code/javascript/testing/phantomjs/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/javascript/testing/phantomjs/</guid>
      <description>

&lt;h1 id=&#34;test-automatisatie-phantomjs&#34;&gt;Test automatisatie: PhantomJS&lt;/h1&gt;

&lt;p&gt;Een experiment om mijn &lt;code&gt;JasmineTestRunner&lt;/code&gt; uit te breiden (of volledig op te splitsen) van &lt;strong&gt;Rhino + Envjs 1.2&lt;/strong&gt; naar &lt;strong&gt;PhantomJS 1.4&lt;/strong&gt; (liefst 1.5 maar dit moet ik nog compilerend krijgen onder Windows).&lt;/p&gt;

&lt;h3 id=&#34;phantom-js-test-code&#34;&gt;Phantom.js test code&lt;/h3&gt;

&lt;h4 id=&#34;start-script&#34;&gt;Start script&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
console.log(&amp;quot;loading&amp;quot;);
var page = new WebPage();

// Is nodig omdat anders in uw testpagina console.log() niets doet. 
page.onConsoleMessage = function(msg) {
    console.log(&amp;quot;debug from page: &amp;quot; + msg);
};

/**
 * Phantom JS 1.4 tests voor EnvJS &amp;quot;fixes&amp;quot; die ik heb moeten erin hacken.
 * Alles werkt blijkbaar native, hoera!
 *
 * TODO:
 * -----
 * # Waarom werken relatieve paden niet met openen van de pagina (crash Phantom)
 * # Waarom werken script includes niet, lokaal op relatief pad? Absoluut = access denied
 *   -&amp;gt; Een HTTP pad opgeven werkt wel, zoals jQuery.com include. 
 *   -&amp;gt; Zolang dit niet goed werkt kunnen we niet naar de jasmine HTML suite gaan! 
 * # testen van set/clearTimeout en set/clearInterval
 * # Heb ik Rhino dan nog wel nodig? Hoe kan ik phantomjs output evalueren en dan in een TestRunner knallen?
 * 
 * Jasmine integratie
 * ------------------
 * Custom XML reporters, zie
 *  - http://code.google.com/p/phantomjs/wiki/ExternalArticles
 *  - http://code.google.com/p/phantomjs/wiki/TestFrameworkIntegration
 *  - https://github.com/detro/phantomjs-jasminexml-example
 **/
page.open(&#39;D:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Profiles&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;BVERBEKE&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Desktop&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;phantomjs-1.4.1-win32-dynamic&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;test.html&#39;, function(status) {

    console.log(&amp;quot;should have printed &#39;yoo&#39; AND &#39;sup?&#39;, include from test.js??&amp;quot;);
    console.log(&amp;quot;&amp;quot;);
    
    var testHTML = page.evaluate(function() {
        return document.getElementById(&#39;test&#39;).innerHTML;
    });
    
    var isKnopHidden = page.evaluate(function() {
        return $(&amp;quot;#hiddenKnop&amp;quot;).is(&amp;quot;:hidden&amp;quot;);
    });
    
    var whichIsFocussed = page.evaluate(function() {
        return document.activeElement.id;
    });
    
    var divHeightCSSGetterTest = page.evaluate(function() {
        return $(&amp;quot;#test&amp;quot;).css(&amp;quot;height&amp;quot;);
    });
    
    var jQueryCheckedSelectorTest = page.evaluate(function() {
        $(&amp;quot;#check&amp;quot;).click();
        return $(&amp;quot;#check&amp;quot;).is(&amp;quot;:checked&amp;quot;);
    }); 
    
    console.log(&amp;quot;got testHTML &amp;quot; + testHTML);
    console.log(&amp;quot;is knop hidden? (should be) --&amp;gt; &amp;quot; + isKnopHidden);
    console.log(&amp;quot;which is focussed? (should be textarea) --&amp;gt; #&amp;quot; + whichIsFocussed);
    console.log(&amp;quot;div height? (should be 100px) --&amp;gt; &amp;quot; + divHeightCSSGetterTest);
    console.log(&amp;quot;checkbox checked? (should be true) --&amp;gt; &amp;quot; + jQueryCheckedSelectorTest);
    
    phantom.exit();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-js-script&#34;&gt;Test.js script&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;console.log(&amp;quot;supp??&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-html-resources&#34;&gt;Test.html resources&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-*W3C*DTD HTML 4.01 Transitional//EN&amp;quot;
&amp;quot;http://www.w3.org/TR/html4/loose.dtd&amp;quot;&amp;gt;

    &amp;lt;head&amp;gt;
        &amp;lt;script type######&amp;quot;text/javascript&amp;quot; src&amp;quot;test.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;test&amp;quot;&amp;gt;bla&amp;lt;/div&amp;gt;
    &amp;lt;form&amp;gt;
        &amp;lt;input type######&amp;quot;button&amp;quot; id&amp;quot;knop&amp;quot;&amp;gt;&amp;lt;/input&amp;gt;
        &amp;lt;textarea id=&amp;quot;text&amp;quot;&amp;gt;eerste val&amp;lt;/textarea&amp;gt;
        &amp;lt;input type######&amp;quot;button&amp;quot; id&amp;quot;hiddenKnop&amp;quot; value=&amp;quot;hidden&amp;quot;&amp;gt;&amp;lt;/input&amp;gt;
        &amp;lt;input type######&amp;quot;checkbox&amp;quot; id&amp;quot;check&amp;quot;&amp;gt;&amp;lt;/input&amp;gt;
    &amp;lt;/form&amp;gt;
    
        &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        console.log(&amp;quot;yoo&amp;quot;);
        document.getElementById(&amp;quot;test&amp;quot;).innerHTML = &amp;quot;nieuwe blabla&amp;quot;;
        
        $(&amp;quot;#test&amp;quot;).html(&amp;quot;jquery nieuwe blabla&amp;quot;).css(&amp;quot;height&amp;quot;, &amp;quot;100px&amp;quot;);
        $(&amp;quot;#hiddenKnop&amp;quot;).hide();
        $(&amp;quot;#text&amp;quot;).focus();
        
        console.log(&amp;quot;is knop hidden? (should be) --&amp;gt; &amp;quot; + $(&amp;quot;#hiddenKnop&amp;quot;).is(&amp;quot;:hidden&amp;quot;));
        
        &amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;console-output-bovenstaande&#34;&gt;Console Output bovenstaande&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;D:&amp;lt;br/&amp;gt;Profiles&amp;lt;br/&amp;gt;BVERBEKE&amp;lt;br/&amp;gt;Desktop&amp;lt;br/&amp;gt;phantomjs-1.4.1-win32-dynamic&amp;gt;phantomjs start.js
loading
debug from page: yoo
debug from page: is knop hidden? (should be) --&amp;gt; true
should have printed &#39;yoo&#39; AND &#39;sup?&#39;, include from test.js??

got testHTML jquery nieuwe blabla
is knop hidden? (should be) --&amp;gt; true
which is focussed? (should be textarea) --&amp;gt; #text
div height? (should be 100px) --&amp;gt; 100px
checkbox checked? (should be true) --&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;phantom-js-uitvoeren&#34;&gt;Phantom.js uitvoeren&lt;/h3&gt;

&lt;p&gt;Downloaden (1.4 voor windows&amp;hellip;) op &lt;a href=&#34;http://code.google.com/p/phantomjs/downloads/list&#34;&gt;http://code.google.com/p/phantomjs/downloads/list&lt;/a&gt;, zit Qt4 libs in. Dan met:&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;code&gt;phantomjs start.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Die dan met &lt;code&gt;page.open()&lt;/code&gt; een webpagina inlaadt. Blijkbaar werkt &lt;code&gt;&amp;lt;script/&amp;gt;&lt;/code&gt; tags evaluaten nog niet voor bepaalde paden?&lt;/p&gt;

&lt;h4 id=&#34;relatieve-paden-probleem&#34;&gt;Relatieve paden probleem&lt;/h4&gt;

&lt;p&gt;Mogelijke oorzaak: &lt;code&gt;Qt 4.8.0&lt;/code&gt; die URLs anders behandelt. Wordt gerevert vanaf &lt;code&gt;4.8.1&lt;/code&gt; en zou ook moeten werken met &lt;code&gt;4.7.0&lt;/code&gt;. Vereist zelf compileren van PhantomJS&amp;hellip;&lt;/p&gt;

&lt;p&gt;Zie ook&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/phantomjs/issues/detail?id=231&#34;&gt;http://code.google.com/p/phantomjs/issues/detail?id=231&lt;/a&gt; en&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9261803/phantomjs-is-not-loading-scripts-correctly-from-html-page-with-tests&#34;&gt;http://stackoverflow.com/questions/9261803/phantomjs-is-not-loading-scripts-correctly-from-html-page-with-tests&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mottige tijdelijke oplossing:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.open(&amp;quot;url&amp;quot;, function() {
  page.injectJs(&amp;quot;filename&amp;quot;); // rel.path is OK here.
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;oplossing-in-windows-werk-met-absoluut-path-dat-de-base-html-include&#34;&gt;Oplossing in Windows: werk met absoluut path dat de base HTML include&lt;/h5&gt;

&lt;p&gt;❗ Bovenstaande &lt;code&gt;.page.open(absoluteUrl)&lt;/code&gt; vervangen door:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.open(require(&#39;fs&#39;).absolute(&#39;test.html&#39;), function() {});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vanaf dan werken ook relatieve &lt;code&gt;&amp;lt;SCRIPT/&amp;gt;&lt;/code&gt; tag includes!&lt;/p&gt;

&lt;h3 id=&#34;evalueren-in-page-context-en-in-phantom-context&#34;&gt;Evalueren in page context en in Phantom context&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;page.evaluate()&lt;/code&gt; wordt in een sandbox uitgevoerd, geen mogelijkheid tot closure scope én geen mogelijkheid tot toegang van het &lt;code&gt;phantom&lt;/code&gt; object. Hoe kunnen we dan argumenten meegeven, of objecten of functies?&lt;/p&gt;

&lt;p&gt;Hier is een &amp;ldquo;hackje&amp;rdquo; voor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function evaluate(page, func) {
    var args = [].slice.call(arguments, 2);
    var str = &#39;function() { return (&#39; + func.toString() + &#39;)(&#39;;
    for (var i ###### 0, l  args.length; i &amp;lt; l; i++) {
        var arg = args[i];
        if (/object|string/.test(typeof arg)) {
            str += &#39;JSON.parse(&#39; + JSON.stringify(JSON.stringify(arg)) + &#39;),&#39;;
        } else {
            str += arg + &#39;,&#39;;
        }
    }
    str = str.replace(/,$/, &#39;); }&#39;);
    return page.evaluate(str);
}

var page = require(&#39;webpage&#39;).create();
var func = function() {
    console.log(&#39;hello, &#39; + document.title + &#39;&amp;lt;br/&amp;gt;n&#39;);
    
    for (var i ###### 0, l  arguments.length; i &amp;lt; l; i++) {
        var arg = arguments[i];
        console.log(typeof arg + &#39;:&amp;lt;br/&amp;gt;t&#39; + arg);
    }
};
page.onLoadFinished = function() {
    evaluate(page, func, true, 0, function() {
        return require(&#39;fs&#39;).read
    });
    phantom.exit(0);
};
page.open(&#39;http://www.google.com/&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wat helaas NIET werkt is het volgende:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var func = function() {
  arguments[0](&#39;bla.html&#39;);
}

page.onLoadFinished = function() {
  var read = require(&#39;fs&#39;).read;
  evaluate(page, func, read);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Waarom niet? &lt;code&gt;ReferenceError: Can&#39;t find variable: require&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hoe kan ik dan &lt;code&gt;Phantom&lt;/code&gt;/&lt;code&gt;commonJs&lt;/code&gt; variabelen gebruiken? Voorlopig niet? Feature request voor 1.6 - zie &lt;a href=&#34;http://code.google.com/p/phantomjs/issues/detail?id=132&#34;&gt;http://code.google.com/p/phantomjs/issues/detail?id=132&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;phantomjs-en-jquery-ajax&#34;&gt;PhantomJS en jQuery Ajax&lt;/h3&gt;

&lt;p&gt;Werkt maar niet in &lt;code&gt;async: false&lt;/code&gt; mode. Zie &lt;a href=&#34;http://code.google.com/p/phantomjs/issues/detail?id######463&amp;amp;thanks463&amp;amp;ts=1332850556&#34;&gt;http://code.google.com/p/phantomjs/issues/detail?id######463&amp;amp;thanks463&amp;amp;ts=1332850556&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;page.evaluate(function() {
    console.log(&amp;quot;ajaxying&amp;quot;);
  jQuery.ajax({
    async: false,
    dataType: &#39;html&#39;,
    url: &#39;test.html&#39;,
    success: function(data) {
        console.log(&amp;quot;--success!!&amp;quot;);
        console.log(data);
        console.log(&amp;quot;--&amp;quot;);
    }
  });       
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Print:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--success!!

--
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;?? Async mode moet uit staan voor jasmine fixtures te kunnen laden&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;phantomjs-en-jasmine-integratie&#34;&gt;Phantomjs en Jasmine integratie&lt;/h3&gt;

&lt;p&gt;Werkend met &lt;strong&gt;jasmine 1.1.0&lt;/strong&gt;: zie uitgewerkt voorbeeld op &lt;a href=&#34;https://github.com/detro/phantomjs-jasminexml-example/&#34;&gt;https://github.com/detro/phantomjs-jasminexml-example/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Het komt basically hierop neer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;een js file die de suite.html inleest en wacht tot jasmine klaar is met runnen&lt;/li&gt;
&lt;li&gt;een custom reporter van jasmine die JUnit XML genereert. Wanneer dit klaar is schrijft de suite.html opener met phantom code de file weg.&lt;/li&gt;
&lt;li&gt;een maven plugin om de executable te draaien en de XML naar de juiste &lt;code&gt;surefire-reports&lt;/code&gt; directory weg te schrijven.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;in-pom-xml&#34;&gt;in pom.xml&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;exec-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;1.1&amp;lt;/version&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;jsunit&amp;lt;/id&amp;gt;
                        &amp;lt;phase&amp;gt;test&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;exec&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;executable&amp;gt;phantomjs.exe&amp;lt;/executable&amp;gt;
                    &amp;lt;workingDirectory&amp;gt;${project.js.test.directory}/lib&amp;lt;/workingDirectory&amp;gt;
                    &amp;lt;arguments&amp;gt;
                        &amp;lt;argument&amp;gt;run-jasmine.js&amp;lt;/argument&amp;gt;
                        &amp;lt;argument&amp;gt;./../suite.html&amp;lt;/argument&amp;gt;
                        &amp;lt;argument&amp;gt;${project.build.directory}/surefire-reports&amp;lt;/argument&amp;gt;
                    &amp;lt;/arguments&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;phantomjs-en-qunit-integratie&#34;&gt;Phantomjs en QUnit integratie&lt;/h3&gt;

&lt;p&gt;Geïntegreerd met maven:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://kennychua.net/blog/running-qunit-tests-in-a-maven-continuous-integration-build-with-phantomjs&#34;&gt;http://kennychua.net/blog/running-qunit-tests-in-a-maven-continuous-integration-build-with-phantomjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/phantomjs-qunit-runner/&#34;&gt;http://code.google.com/p/phantomjs-qunit-runner/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;fixtures-inladen&#34;&gt;Fixtures inladen&lt;/h4&gt;

&lt;p&gt;Voor zover de QUnit documentatie aanwezig is, zijn fixtures child DOM elementen van &lt;code&gt;#fixtures&lt;/code&gt;, een div die buiten het scherm float:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The #qunit-fixture element can be used to provide and manipulate test markup, and it&amp;rsquo;s content will be automatically reset after each test (see QUnit.reset). The element is styled with position:absolute; top:-10000px; left:-10000; - with these, it won&amp;rsquo;t be obstructing the result, without affecting code the relies on the affected elements to be visible (instead of display:none).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wordt dus automatisch gereset, maar we hebben dan ook &lt;code&gt;jQuery.ajax&lt;/code&gt; nodig om externe files in te laden -&amp;gt; zelfde probleem!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>