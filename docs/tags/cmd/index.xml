<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cmd on Brain Baking</title>
    <link>https://brainbaking.com/tags/cmd/</link>
    <description>Recent content in Cmd on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Fri, 05 Apr 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brainbaking.com/tags/cmd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>win</title>
      <link>https://brainbaking.com/wiki/unix/cmd/win/</link>
      <pubDate>Fri, 05 Apr 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/unix/cmd/win/</guid>
      <description>Windows stuff list processes Te doen via:
 tasklist wmic process get [caption/commandline/...] wmic process list | more  Kill specific process By window title taskkill /F /FI &amp;quot;WINDOWTITLE eq Administrator: STUBS&amp;quot;
❗️ er zijn TWEE SPATIES tussen Administrator en uw eigenlijke title. Hoe zet je dan die title in een bat of cmd file?
TITLE STUBS
By commandline Stel: een java proces draait met een bepaalde jar, maar je weet niet welke je moet afschieten omdat er nog een server draait.</description>
    </item>
    
    <item>
      <title>bash</title>
      <link>https://brainbaking.com/wiki/unix/cmd/bash/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/unix/cmd/bash/</guid>
      <description>Bash Scripting Rerun last command !!  Joink.
bash opties uit een shell script halen Gepikt van http://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
#!/bin/bash for i in $* do case $i in -p######*|--prefix*) PREFIX######`echo $i | sed &#39;s/[-a-zA-Z0-9]*//&#39;` ;; -s######*|--searchpath*) SEARCHPATH######`echo $i | sed &#39;s/[-a-zA-Z0-9]*//&#39;` ;; -l######*|--lib*) DIR######`echo $i | sed &#39;s/[-a-zA-Z0-9]*//&#39;` ;; --default) DEFAULT=YES ;; *) # unknown option ;; esac done echo PREFIX = ${PREFIX} echo SEARCH PATH = ${SEARCHPATH} echo DIRS = ${DIR}  Makkelijker dan getopts()?</description>
    </item>
    
    <item>
      <title>cmd</title>
      <link>https://brainbaking.com/wiki/unix/cmd/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/unix/cmd/</guid>
      <description>Unix Commandline Stuff Binaries zoeken Kan met whereis, maar die zoekt blijkbaar niet in &amp;ldquo;alle&amp;rdquo; binary dirs - enkel degene die geconfigureerd zijn onder:
sysctl user.cs_path # output: user.cs_path = /usr/bin:/bin:/usr/sbin:/sbin  Shell automatisation Command-line programs feeden kan met het expect tooltje. Bijvoorbeeld, bij het aanloggen in ssh moet je daarna een wachtwoord geven en op enter drukken dat niet als commandline argument meegegeven kan worden. Dit kan je dan zo forceren:</description>
    </item>
    
    <item>
      <title>find</title>
      <link>https://brainbaking.com/wiki/unix/cmd/find/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/unix/cmd/find/</guid>
      <description>Find command -&amp;gt; Zie http://northredoubt.com/n/2009/12/30/linuxunixcygwin-find-command/ voor enorm veel uitleg over basics van find.
Voor een combinatievoorbeeld met grep, zie unix/cmd
Finding stuff find / -name &amp;quot;*.ext&amp;quot; -type f -exec [command with args] {} &amp;lt;br/&amp;gt;;  Bovenstaande lijn zoekt in root directory voor alle .ext bestanden (-type f is standaard, d staat voor directory etc, zie manual) en pipet alle resultaten naar een bepaald commando achter -exec. {} Stelt het gevonden bestand voor (full path), &amp;lt;br/&amp;gt;; eindigt het exec commando.</description>
    </item>
    
    <item>
      <title>grep</title>
      <link>https://brainbaking.com/wiki/unix/cmd/grep/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/unix/cmd/grep/</guid>
      <description>Greppin&amp;rsquo; away ❗️ Combinatievoorbeeld met find te vinden op unix/cmd.
Surrounding lines while greppin&amp;rsquo; Dit heet lines in context in man grep.
grep -B 3 -A 2 foo README.txt  Verklaring: Zoek foo in readme.txt met 3 lijnen boven en 2 lijnen onderaan.  Indien aantal lijnen gelijk, gebruik simpelweg -C [x].
Inverse grepping In file contents Om te zoeken naar bijvoorbeeld &amp;lsquo;hond&amp;rsquo;, maar niet &amp;lsquo;kat&amp;rsquo;, moet je inverse zoeken voor kat:</description>
    </item>
    
  </channel>
</rss>