<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Persistence on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/persistence/</link>
    <description>Recent content in Persistence on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Mon, 13 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.brainbaking.com/tags/persistence/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>persistence</title>
      <link>http://www.brainbaking.com/wiki/code/csharp/persistence/</link>
      <pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/csharp/persistence/</guid>
      <description>Persistence NHibernate Second level caching Gebruik SysCache2 voor Web projecten. Hoe enablen? DLL ref + in config:
Configuration.SessionFactory().Caching.Through&amp;lt;SysCacheProvider&amp;gt;().WithDefaultExpiration(60); Configuration.SetProperty(Environment.UseSecondLevelCache, &amp;quot;true&amp;quot;); Configuration.SetProperty(Environment.UseQueryCache, &amp;quot;true&amp;quot;);  In hbm mappings moet je entiteiten cache-baar markeren (read-only, read-write, &amp;hellip; zie docs) met &amp;lt;cache usage=&amp;quot;read-write&amp;quot; /&amp;gt;. Vanaf dan kan je aan Criteria of LINQ queries dingen doen als:
 Session.Query&amp;lt;Obj&amp;gt;().Cachable().List() of Session.CreateCriteria&amp;lt;Obj&amp;gt;().SetCachable(true)  Groeperen in &amp;ldquo;regions&amp;rdquo; is ook mogelijk, mee te geven met criteria.
Clearing everything SessionFactory.</description>
    </item>
    
    <item>
      <title>persistence</title>
      <link>http://www.brainbaking.com/wiki/code/java/persistence/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/java/persistence/</guid>
      <description>Persistence JPA Collections mapping Hoe map ik een koppeltabel zonder die als entiteit zelf in ons domein te hebben? Zo:
@OneToMany(fetch ###### LAZY, cascade { MERGE, PERSIST }) @JoinTable(name = &amp;quot;physicalzonezonealias&amp;quot;, joinColumns ###### @JoinColumn(name &amp;quot;physicalzone&amp;quot;, referencedColumnName = &amp;quot;id&amp;quot;), inverseJoinColumns ###### @JoinColumn(name &amp;quot;zonealias&amp;quot;, referencedColumnName = &amp;quot;id&amp;quot;)) @SequenceGenerator(name ###### &amp;quot;physicalzonezonealias_id&amp;quot;, sequenceName &amp;quot;physicalzonezonealias_id&amp;quot;, allocationSize = 1) @CollectionId(columns ###### @Column(name &amp;quot;id&amp;quot;), type ###### @Type(type &amp;quot;int&amp;quot;), generator = &amp;quot;physicalzonezonealias_id&amp;quot;) private List&amp;lt;Zonealias&amp;gt; zoneAliases = new ArrayList&amp;lt;Zonealias&amp;gt;();  Wat is hier leuk aan?</description>
    </item>
    
  </channel>
</rss>