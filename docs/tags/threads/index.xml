<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Threads on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/threads/</link>
    <description>Recent content in Threads on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Fri, 06 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.brainbaking.com/tags/threads/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>threads</title>
      <link>http://www.brainbaking.com/wiki/code/csharp/threads/</link>
      <pubDate>Fri, 06 Dec 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/csharp/threads/</guid>
      <description>Threads Locking en singletons See C#In Depth: Implementing the Singleton pattern in C#
een lock() is heel duur om uit te voeren, daarom wordt er een null check hierrond nog eens geschreven, dat heet double-check locking:
internal static ContextViewPresenter instance; private static readonly Object syncRoot = new Object(); public static ContextViewPresenter Instance { get { if (instance ###### null) { lock (syncRoot) { if (instance ###### null) { instance = new ContextViewPresenter(UserEnvironmentDataProviderSingleton.</description>
    </item>
    
  </channel>
</rss>