<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Svnlog on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/svnlog/index.xml</link>
    <description>Recent content in Svnlog on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <atom:link href="http://www.brainbaking.com/tags/svnlog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>svnlog</title>
      <link>http://www.brainbaking.com/wiki/code/ruby/scripts/svnlog/</link>
      <pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/ruby/scripts/svnlog/</guid>
      <description>

&lt;h1 id=&#34;svnlog&#34;&gt;Svnlog&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;nokogiri&#39; # gem install nokogiri first! 
require &#39;csv&#39;
require &#39;date&#39;

# Ex. XML: &amp;lt;log&amp;gt; ... &amp;lt;/log&amp;gt;
# &amp;lt;logentry revision=&amp;quot;x&amp;quot;&amp;gt;
# =&amp;gt; &amp;lt;author&amp;gt;name&amp;lt;/author&amp;gt;
# =&amp;gt; &amp;lt;date&amp;gt;yyyy-mm-ddThh:mm:ssss&amp;lt;/date&amp;gt;
# =&amp;gt; &amp;lt;msg&amp;gt;message&amp;lt;/msg&amp;gt;
# &amp;lt;/logentry&amp;gt;

puts &amp;quot;SVN Release notes creator&amp;quot;
puts &amp;quot;---------&amp;quot;

puts &amp;quot;Revision from? (ex revision &#39;8722&#39; or date {YYYY-MM-DD} or &#39;HEAD&#39;) &amp;gt; &amp;quot;
revFrom = gets.chomp
puts &amp;quot;Revision to? &amp;gt; &amp;quot;
revTo = gets.chomp

puts &amp;quot;Getting log from SVN, hang in there... &amp;quot;

rmFile = File.open(&#39;svnlog_redmine.txt&#39;, &#39;w&#39;)
btFile = File.open(&#39;svnlog_bridgetrak.txt&#39;, &#39;w&#39;)
storyFile = File.open(&#39;svnlog_stories.txt&#39;, &#39;w&#39;)
csv = CSV.open(&#39;svnlog.csv&#39;, &#39;wb&#39;)

[ &#39;.&#39;, &#39;PFW.Base&#39; ].map { |dir|
	puts &amp;quot; -- processing dir &#39;#{dir}&#39; ...&amp;quot;
	rawxml = `cd #{dir} &amp;amp;&amp;amp; svn log --xml --revision #{revFrom}:#{revTo}`

	xml = Nokogiri::XML(rawxml)
	xml.xpath(&amp;quot;//logentry&amp;quot;).map { |entry|
		hash = Hash.new
		hash[&#39;rev&#39;] = entry.attr(&amp;quot;revision&amp;quot;)
		hash[&#39;author&#39;] = entry.css(&amp;quot;author&amp;quot;).text
		hash[&#39;date&#39;] = DateTime.strptime(entry.css(&amp;quot;date&amp;quot;).text, &#39;%Y-%m-%dT%H:%M:%S&#39;)
		hash[&#39;msg&#39;] = entry.css(&amp;quot;msg&amp;quot;).text.strip.tr(&amp;quot;&amp;lt;br/&amp;gt;n&amp;quot;, &amp;quot;&amp;quot;)
		hash[&#39;btIssues&#39;] = hash[&#39;msg&#39;].scan(/bt#([0-9]+)/i).flatten.uniq
		hash[&#39;rmIssues&#39;] = hash[&#39;msg&#39;].scan(/rm#([0-9]+)/i).flatten.uniq.map { |rm| &amp;quot;http://server.cloudapp.net/redmine/issues/#{rm}&amp;quot; }
		hash[&#39;stories&#39;] = hash[&#39;msg&#39;].scan(/story#(&amp;lt;br/&amp;gt;S+)&amp;lt;br/&amp;gt;s/i).flatten.uniq

		hash
	}
}.flatten.sort_by { |hash| hash[&#39;date&#39;] }.each do |entry|
	rm = entry[&#39;rmIssues&#39;].join(&#39;, &#39;)
	csv &amp;lt;&amp;lt; [ &#39;r&#39; + entry[&#39;rev&#39;], entry[&#39;date&#39;], entry[&#39;author&#39;], entry[&#39;msg&#39;], rm ]
	entry[&#39;btIssues&#39;].each do |issue|
		btFile &amp;lt;&amp;lt; issue &amp;lt;&amp;lt; &amp;quot;&amp;lt;br/&amp;gt;n&amp;quot;
	end
	entry[&#39;rmIssues&#39;].each do |issue|
		rmFile &amp;lt;&amp;lt; issue &amp;lt;&amp;lt; &amp;quot;&amp;lt;br/&amp;gt;n&amp;quot;
	end
	entry[&#39;stories&#39;].each do |issue|
		storyFile &amp;lt;&amp;lt; issue &amp;lt;&amp;lt; &amp;quot;&amp;lt;br/&amp;gt;n&amp;quot;
	end
end


puts &amp;quot;----&amp;quot;
puts &amp;quot;DONE: see svnlog.csv &amp;amp; svnlog_X.txt files&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>