<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/maven/index.xml</link>
    <description>Recent content in Maven on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <atom:link href="http://www.brainbaking.com/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>maven</title>
      <link>http://www.brainbaking.com/wiki/code/build/maven/</link>
      <pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/build/maven/</guid>
      <description>

&lt;h1 id=&#34;maven2-build-stuff&#34;&gt;Maven2 Build stuff&lt;/h1&gt;

&lt;p&gt;❗ &lt;strong&gt;properties&lt;/strong&gt; guide: &lt;a href=&#34;http://docs.codehaus.org/display/MAVENUSER/MavenPropertiesGuide&#34;&gt;http://docs.codehaus.org/display/MAVENUSER/MavenPropertiesGuide&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;javascript-files-automatisch-minify-en&#34;&gt;javascript files automatisch minify-en&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;profiles&amp;gt;
        &amp;lt;profile&amp;gt;
            &amp;lt;id&amp;gt;minify&amp;lt;/id&amp;gt;
            &amp;lt;build&amp;gt;
                &amp;lt;plugins&amp;gt;
                    &amp;lt;plugin&amp;gt;
                        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;2.1.1&amp;lt;/version&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;warSourceExcludes&amp;gt;**/js/**&amp;lt;/warSourceExcludes&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/plugin&amp;gt;
                    &amp;lt;plugin&amp;gt;
                        &amp;lt;groupId&amp;gt;net.tqh.plugins&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;uglifyjs-maven-plugin&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;sourceDirectory&amp;gt;src/main/webapp/js&amp;lt;/sourceDirectory&amp;gt;
                            &amp;lt;outputDirectory&amp;gt;target/${project.name}-${version}/js&amp;lt;/outputDirectory&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                        &amp;lt;executions&amp;gt;
                            &amp;lt;execution&amp;gt;
                                &amp;lt;phase&amp;gt;prepare-package&amp;lt;/phase&amp;gt;
                                &amp;lt;goals&amp;gt;
                                    &amp;lt;goal&amp;gt;uglify&amp;lt;/goal&amp;gt;
                                &amp;lt;/goals&amp;gt;
                            &amp;lt;/execution&amp;gt;
                        &amp;lt;/executions&amp;gt;
                    &amp;lt;/plugin&amp;gt;
                &amp;lt;/plugins&amp;gt;
            &amp;lt;/build&amp;gt;
        &amp;lt;/profile&amp;gt;
    &amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bron: https:*github.com/mishoo/UglifyJS - maven plugin gebruikt &lt;code&gt;Rhino&lt;/code&gt; om dit uit te voeren. Kan ook met &lt;code&gt;node&lt;/code&gt; uitgevoerd worden - gebruik bij voorkeur &lt;code&gt;r.js&lt;/code&gt; (zie http:*requirejs.org/docs/optimization.html)&lt;/p&gt;

&lt;h2 id=&#34;argumenten-als-system-property-meegeven-aan-testen&#34;&gt;Argumenten als system property meegeven aan testen&lt;/h2&gt;

&lt;p&gt;Maven forkt by default dus &lt;code&gt;-Dbla=blie&lt;/code&gt; gaat niet werken, dit is een property voor het maven java commando, maar niet voor de test zelf.&lt;/p&gt;

&lt;p&gt;Oplossing: &lt;code&gt;mvn test -DargLine######&amp;quot;-Dsystem.test.propertytest&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;argLine&lt;/strong&gt; gebruiken. Zie:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cowtowncoder.com/blog/archives/2010/04/entry_385.html&#34;&gt;http://www.cowtowncoder.com/blog/archives/2010/04/entry_385.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.codehaus.org/display/MAVENUSER/MavenPropertiesGuide&#34;&gt;maven properties guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;een-single-deps-jar-mekan-met-maven-assembly&#34;&gt;Een single-deps jar mekan met maven assembly&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt; &amp;lt;plugin&amp;gt;
            &amp;lt;artifactId&amp;gt;maven-assembly-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;archive&amp;gt;
                    &amp;lt;manifest&amp;gt;
                        &amp;lt;mainClass&amp;gt;fully.qualified.MainClass&amp;lt;/mainClass&amp;gt;
                    &amp;lt;/manifest&amp;gt;
                &amp;lt;/archive&amp;gt;
                &amp;lt;descriptorRefs&amp;gt;
                    &amp;lt;descriptorRef&amp;gt;jar-with-dependencies&amp;lt;/descriptorRef&amp;gt;
                &amp;lt;/descriptorRefs&amp;gt;
            &amp;lt;/configuration&amp;gt;
        &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En dan met &lt;code&gt;mvn assembly:single&lt;/code&gt; uitvoeren. Dit maakt in uw target dir een file genaamd &lt;code&gt;bla-1.0-SNAPSHOT-jar-with-dependencies.jar&lt;/code&gt;. &lt;code&gt;java -jar [jar]&lt;/code&gt; werkt dan.&lt;/p&gt;

&lt;h2 id=&#34;een-test-jar-maken-met-maven-assembly&#34;&gt;Een test jar maken met maven assembly&lt;/h2&gt;

&lt;p&gt;Met &lt;code&gt;maven assembly&lt;/code&gt; kan je files packagen na het compileren van tests maar voor het runnen. Op die manier kunnen we dus bvb class files in een jar packagen (of resources in een zip). Daarna manueel installeren in de repository ofzoiets.&lt;/p&gt;

&lt;p&gt;Plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-assembly-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.2-beta-2&amp;lt;/version&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;create-test-dependency&amp;lt;/id&amp;gt;
                        &amp;lt;phase&amp;gt;process-test-classes&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;single&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;finalName&amp;gt;gatecontrol&amp;lt;/finalName&amp;gt;
                            &amp;lt;attach&amp;gt;false&amp;lt;/attach&amp;gt;
                            &amp;lt;descriptors&amp;gt;
                                &amp;lt;descriptor&amp;gt;test-assembly.xml&amp;lt;/descriptor&amp;gt;
                            &amp;lt;/descriptors&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De externe assembly file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;assembly&amp;gt;
  &amp;lt;id&amp;gt;testjar&amp;lt;/id&amp;gt;
  &amp;lt;formats&amp;gt;
    &amp;lt;format&amp;gt;jar&amp;lt;/format&amp;gt;
  &amp;lt;/formats&amp;gt;
  &amp;lt;includeBaseDirectory&amp;gt;false&amp;lt;/includeBaseDirectory&amp;gt;
  ```ets
    ```et
      &amp;lt;directory&amp;gt;target/test-classes&amp;lt;/directory&amp;gt;
      &amp;lt;outputDirectory&amp;gt;/&amp;lt;/outputDirectory&amp;gt;
      &amp;lt;includes&amp;gt;
        &amp;lt;include&amp;gt;**&amp;lt;/include&amp;gt;
      &amp;lt;/includes&amp;gt;
    &amp;lt;/fileSet&amp;gt;
  &amp;lt;/fileSets&amp;gt;
&amp;lt;/assembly&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;❗ test jars zijn precies niet &lt;strong&gt;transitief&lt;/strong&gt; qua dependencies? &lt;br/&gt;&lt;br/&gt;
Als je een test-jar (die dus op &lt;code&gt;scope test&lt;/code&gt; staat) wil includen in je eigen &lt;code&gt;assembly:single&lt;/code&gt; jar, kan je &lt;code&gt;classifier tests&lt;/code&gt; gebruiken:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;be.bla&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;bla-blie&amp;lt;/artifactId&amp;gt;
  &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
  &amp;lt;classifier&amp;gt;tests&amp;lt;/classifier&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dan wordt die test jar mee gepackaged, maar zijn dependencies blijbkaar niet?&lt;/p&gt;

&lt;h2 id=&#34;profiles-en-properties&#34;&gt;Profiles en properties&lt;/h2&gt;

&lt;h4 id=&#34;activebydefault&#34;&gt;activeByDefault&lt;/h4&gt;

&lt;p&gt;Zie &lt;a href=&#34;http://java.dzone.com/articles/maven-profile-best-practices&#34;&gt;http://java.dzone.com/articles/maven-profile-best-practices&lt;/a&gt; - &lt;strong&gt;nooit&lt;/strong&gt; gebruiken! Waarom?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This flag activates the profile if no other profile is activated. Consequently, it will fail to activate the profile if any other profile is activated. This seems like a simple rule which would be hard to misunderstand, but in fact it&amp;rsquo;s surprisingly easy to be fooled by its behaviour. When you run a multimodule build, the activeByDefault flag will fail to operate when any profile is activated, even if the profile is not defined in the module where the activeByDefault flag occurs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In plaats daar van:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;profile id=&amp;quot;nofoobar&amp;quot;&amp;gt;
    &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
            &amp;lt;name&amp;gt;!foo.bar&amp;lt;/name&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/activation&amp;gt;
&amp;lt;/profile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;jaxb-generatie&#34;&gt;JAXB generatie&lt;/h2&gt;

&lt;h4 id=&#34;genereer-endpoints-vanaf-wsdl&#34;&gt;Genereer endpoints vanaf WSDL&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;jaxws-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${org.codehaus.mojo.jaxws.maven.plugin.version}&amp;lt;/version&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;wsimport&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;wsdlDirectory&amp;gt;src/resources/wsdl&amp;lt;/wsdlDirectory&amp;gt;
                    &amp;lt;packageName&amp;gt;com.x.interfaces.ws&amp;lt;/packageName&amp;gt;
                    &amp;lt;sourceDestDir&amp;gt;${project.build.directory}/generated-sources/jaxws&amp;lt;/sourceDestDir&amp;gt;
                &amp;lt;/configuration&amp;gt;
                &amp;lt;dependencies&amp;gt;
                    &amp;lt;dependency&amp;gt;
                        &amp;lt;groupId&amp;gt;com.sun.xml.ws&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;jaxws-tools&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;${com.sun.xml.ws.jaxws.version}&amp;lt;/version&amp;gt;
                    &amp;lt;/dependency&amp;gt;
                &amp;lt;/dependencies&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Zie &lt;a href=&#34;http://rphgoossens.wordpress.com/2011/02/20/developing-a-contract-first-jax-ws-webservice/&#34;&gt;http://rphgoossens.wordpress.com/2011/02/20/developing-a-contract-first-jax-ws-webservice/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Genereer de code met &lt;code&gt;mvn jaxws:wsimport&lt;/code&gt; goal.&lt;/p&gt;

&lt;h4 id=&#34;genereer-jaxb-java-objecten-vanaf-xsd&#34;&gt;Genereer JAXB Java objecten vanaf XSD&lt;/h4&gt;

&lt;p&gt;Zelfde pincipe, andere &lt;code&gt;goal&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.jvnet.jaxb2.maven2&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-jaxb2-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${org.jvnet.jaxb2.maven2.maven.jaxb2.plugin.version}&amp;lt;/version&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;crm_generation&amp;lt;/id&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;generate&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;schemaDirectory&amp;gt;src/main/schema&amp;lt;/schemaDirectory&amp;gt;
                            &amp;lt;schemaIncludes&amp;gt;
                                &amp;lt;include&amp;gt;y.wsdl&amp;lt;/include&amp;gt;
                            &amp;lt;/schemaIncludes&amp;gt;
                            &amp;lt;schemaLanguage&amp;gt;WSDL&amp;lt;/schemaLanguage&amp;gt;
                            &amp;lt;generatePackage&amp;gt;com.x.interfaces&amp;lt;/generatePackage&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;integratie-met-ant&#34;&gt;Integratie met Ant&lt;/h2&gt;

&lt;p&gt;Maven kan ook ant tasks uitvoeren. Dit door ant code te embedden in de pom.xml op de volgende manier:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;           &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;maven-antrun-plugin&amp;lt;/artifactId&amp;gt;
             
            &amp;lt;configuration&amp;gt;
             &amp;lt;tasks&amp;gt;
              &amp;lt;property name######&amp;quot;target.war&amp;quot; value&amp;quot;bla.war&amp;quot; /&amp;gt;
              &amp;lt;property name######&amp;quot;zip.name&amp;quot; value&amp;quot;bla.zip&amp;quot; /&amp;gt;
              
              &amp;lt;ant antfile######&amp;quot;build.xml&amp;quot; inheritRefs&amp;quot;true&amp;quot; inheritAll=&amp;quot;true&amp;quot;&amp;gt;
                &amp;lt;target name=&amp;quot;buildZip&amp;quot; /&amp;gt;
              &amp;lt;/ant&amp;gt;
             &amp;lt;/tasks&amp;gt;
            &amp;lt;/configuration&amp;gt;
            
            &amp;lt;goals&amp;gt;
             &amp;lt;goal&amp;gt;install&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
           &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Binnen de configuration tag zit ant code, met de ant tag roep ik een externe build xml aan. Op die manier kan je dus een ant buildfile volledig naast een pom.xml maven2 file plaatsen, en properties doorgeven! Die ant task wordt uitgevoerd met het commando &lt;code&gt;mvn antrun:run&lt;/code&gt; of bij bepaalde geconfigureerde goals.&lt;/p&gt;

&lt;p&gt;Voorbeeld: &lt;a href=&#34;http://maven.apache.org/plugins/maven-antrun-plugin/&#34;&gt;http://maven.apache.org/plugins/maven-antrun-plugin/&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;aan-bepaalde-phase-hangen&#34;&gt;Aan bepaalde phase hangen&lt;/h4&gt;

&lt;p&gt;Zie &lt;a href=&#34;http://www.avajava.com/tutorials/lessons/what-are-the-phases-of-the-maven-default-lifecycle.html&#34;&gt;http://www.avajava.com/tutorials/lessons/what-are-the-phases-of-the-maven-default-lifecycle.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Om nog rap een property file te kopiëren, best aan &lt;code&gt;prapare-package&lt;/code&gt; phase hangen (maven 2.1+):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;     &amp;lt;profiles&amp;gt;
       &amp;lt;profile&amp;gt;
         &amp;lt;id&amp;gt;env&amp;lt;/id&amp;gt;
         &amp;lt;activation&amp;gt;
            &amp;lt;property&amp;gt;
                &amp;lt;name&amp;gt;env&amp;lt;/name&amp;gt;
            &amp;lt;/property&amp;gt;
         &amp;lt;/activation&amp;gt;
         &amp;lt;build&amp;gt;
           &amp;lt;plugins&amp;gt;
             &amp;lt;plugin&amp;gt;
               &amp;lt;artifactId&amp;gt;maven-antrun-plugin&amp;lt;/artifactId&amp;gt;
               &amp;lt;executions&amp;gt;
                 &amp;lt;execution&amp;gt;
                   &amp;lt;phase&amp;gt;prepare-package&amp;lt;/phase&amp;gt;
                   &amp;lt;goals&amp;gt;
                     &amp;lt;goal&amp;gt;run&amp;lt;/goal&amp;gt;
                   &amp;lt;/goals&amp;gt;
                   &amp;lt;configuration&amp;gt;
                     &amp;lt;tasks&amp;gt;
                        &amp;lt;echo message=&amp;quot;Env property detected, copying ${env} to output directory...&amp;quot; /&amp;gt;
                        &amp;lt;copy file######&amp;quot;src/main/resources/template/env.${env}.properties&amp;quot; tofile&amp;quot;${project.build.outputDirectory}/env.properties&amp;quot;/&amp;gt;
                     &amp;lt;/tasks&amp;gt;
                   &amp;lt;/configuration&amp;gt;
                 &amp;lt;/execution&amp;gt;
               &amp;lt;/executions&amp;gt;
             &amp;lt;/plugin&amp;gt;
         &amp;lt;/plugins&amp;gt;
        &amp;lt;/build&amp;gt;
       &amp;lt;/profile&amp;gt;
     &amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;javadoc-genereren&#34;&gt;Javadoc genereren&lt;/h2&gt;

&lt;p&gt;Deze plugin nodig:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-javadoc-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.7&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                  &amp;lt;reportOutputDirectory&amp;gt;release/doc&amp;lt;/reportOutputDirectory&amp;gt;
                  &amp;lt;destDir&amp;gt;javadoc&amp;lt;/destDir&amp;gt;
                  &amp;lt;doctitle&amp;gt;API for ${project.name} ${project.version}&amp;lt;/doctitle&amp;gt;
                  &amp;lt;windowtitle&amp;gt;API for ${project.name} ${project.version}&amp;lt;/windowtitle&amp;gt;
                &amp;lt;/configuration&amp;gt;
           &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;❗ output dir = &lt;code&gt;${reportOutputDirectory}/${destDir}&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;
Voorbeeld: &lt;a href=&#34;http://maven.apache.org/plugins/maven-javadoc-plugin/examples/output-configuration.html&#34;&gt;http://maven.apache.org/plugins/maven-javadoc-plugin/examples/output-configuration.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;deployen-met-maven&#34;&gt;Deployen met maven&lt;/h2&gt;

&lt;h3 id=&#34;jetty-integratie-en-auto-deploy&#34;&gt;Jetty integratie en auto-deploy&lt;/h3&gt;

&lt;h4 id=&#34;jetty-run&#34;&gt;jetty run&lt;/h4&gt;

&lt;p&gt;Integratie met jetty en maven2: gebruik &lt;code&gt;mvn jetty:run&lt;/code&gt; om automatisch de jetty server op te starten.&lt;br/&gt;&lt;br/&gt;
Het is ook mogelijk om die te laten scannen voor resource changes met &lt;code&gt;scanIntervalSeconds&lt;/code&gt; - server start automatisch (normaal gezien&amp;hellip;)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.mortbay.jetty&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-jetty-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;6.1.26&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;stopPort&amp;gt;9966&amp;lt;/stopPort&amp;gt;
                    &amp;lt;stopKey&amp;gt;comeet&amp;lt;/stopKey&amp;gt;
                    &amp;lt;scanIntervalSeconds&amp;gt;5&amp;lt;/scanIntervalSeconds&amp;gt;
                    &amp;lt;connectors&amp;gt;
                        &amp;lt;connector implementation=&amp;quot;org.mortbay.jetty.nio.SelectChannelConnector&amp;quot;&amp;gt;
                            &amp;lt;port&amp;gt;8089&amp;lt;/port&amp;gt;
                        &amp;lt;/connector&amp;gt;
                    &amp;lt;/connectors&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;❗ Vanaf Jetty plugin 7 zijn packages hernoemd en zo, zie &lt;a href=&#34;http://wiki.eclipse.org/Jetty&#34;&gt;http://wiki.eclipse.org/Jetty&lt;/a&gt; en de migratie van 6-&amp;gt;7-&amp;gt;&amp;hellip;9&lt;/p&gt;

&lt;h5 id=&#34;debug-poort-instellingen&#34;&gt;Debug poort instellingen&lt;/h5&gt;

&lt;p&gt;Gebruikt &lt;code&gt;MAVEN_OPTS&lt;/code&gt; JVM parameters (omdat het proces niet geforked wordt?): &lt;a href=&#34;http://docs.codehaus.org/display/JETTY/Debugging+with+the+Maven+Jetty+Plugin+inside+Eclipse&#34;&gt;http://docs.codehaus.org/display/JETTY/Debugging+with+the+Maven+Jetty+Plugin+inside+Eclipse&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-Xdebug -Xnoagent -Djava.compiler######NONE -Xrunjdwp:transportdt_socket,address######4000,servery,suspend=y
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;jndi-datasources-definiëren&#34;&gt;JNDI Datasources definiëren&lt;/h5&gt;

&lt;p&gt;Kan in webapp/WEB-INF/jetty-env.xml:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE Configure PUBLIC &amp;quot;-*Mort Bay Consulting*DTD Configure*EN&amp;quot; &amp;quot;http:*jetty.mortbay.org/configure.dtd&amp;quot;&amp;gt;

&amp;lt;Configure class=&amp;quot;org.mortbay.jetty.webapp.WebAppContext&amp;quot;&amp;gt;

    &amp;lt;New id######&amp;quot;partnerwerkingDataSource&amp;quot; class&amp;quot;org.mortbay.jetty.plus.naming.Resource&amp;quot;&amp;gt;
        &amp;lt;Arg&amp;gt;jdbc/partnerwerkingDataSource&amp;lt;/Arg&amp;gt;
        &amp;lt;Arg&amp;gt;
            &amp;lt;New class=&amp;quot;oracle.jdbc.pool.OracleDataSource&amp;quot;&amp;gt;
                &amp;lt;Set name=&amp;quot;URL&amp;quot;&amp;gt;${database.url}&amp;lt;/Set&amp;gt;
                &amp;lt;Set name=&amp;quot;user&amp;quot;&amp;gt;${database.user}&amp;lt;/Set&amp;gt;
                &amp;lt;Set name=&amp;quot;password&amp;quot;&amp;gt;${database.password}&amp;lt;/Set&amp;gt;
            &amp;lt;/New&amp;gt;
        &amp;lt;/Arg&amp;gt;
    &amp;lt;/New&amp;gt;

&amp;lt;/Configure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;wordt dan automatisch door &lt;code&gt;jetty:run&lt;/code&gt; opgepikt.&lt;/p&gt;

&lt;h4 id=&#34;auto-start-bij-integratie-testen-failsafe-plugin&#34;&gt;auto-start bij integratie testen (failsafe plugin)&lt;/h4&gt;

&lt;p&gt;Als we aan bovenstaande plugin ook nog &lt;code&gt;executions&lt;/code&gt; opgeven, start jetty automatisch bij &lt;code&gt;pre-integration-test&lt;/code&gt; en stopt hij automatisch bij &lt;code&gt;-post-integration-test&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;start-jetty&amp;lt;/id&amp;gt;
                        &amp;lt;phase&amp;gt;pre-integration-test&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;run&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;scanIntervalSeconds&amp;gt;0&amp;lt;/scanIntervalSeconds&amp;gt;
                            &amp;lt;daemon&amp;gt;true&amp;lt;/daemon&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/execution&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;stop-jetty&amp;lt;/id&amp;gt;
                        &amp;lt;phase&amp;gt;post-integration-test&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;stop&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;daemon&lt;/code&gt; moet op &lt;strong&gt;true&lt;/strong&gt; staan omdat de bovenstaande plugin (jetty6) geen fork doet en dan natuurlijk geen testen gedraaid worden&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;tomcat-deploy&#34;&gt;Tomcat deploy&lt;/h3&gt;

&lt;p&gt;Op verschillende omgevingen deployen kan door verschillende profielen aan te maken in de pom.xml file, en dan als env. parameter &lt;code&gt;-Denv=[gewenste env value]&lt;/code&gt; de te deployen mee te geven:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;profiles&amp;gt;
        &amp;lt;profile&amp;gt;
            &amp;lt;activation&amp;gt;
                &amp;lt;property&amp;gt;
                    &amp;lt;name&amp;gt;env&amp;lt;/name&amp;gt;
                    &amp;lt;value&amp;gt;test&amp;lt;/value&amp;gt;
                &amp;lt;/property&amp;gt;
            &amp;lt;/activation&amp;gt;

            &amp;lt;properties&amp;gt;
                &amp;lt;server.url&amp;gt;http://blatomcat:8888/manager&amp;lt;/server.url&amp;gt;
                &amp;lt;server.username&amp;gt;user&amp;lt;/server.username&amp;gt;
                &amp;lt;server.password&amp;gt;pass&amp;lt;/server.password&amp;gt;
            &amp;lt;/properties&amp;gt;
        &amp;lt;/profile&amp;gt;
    &amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Die properties die hierboven staan worden dan in deze plugin ingevuld:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;tomcat-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;1.0-beta-1&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;url&amp;gt;${server.url}&amp;lt;/url&amp;gt;
                    &amp;lt;username&amp;gt;${server.username}&amp;lt;/username&amp;gt;
                    &amp;lt;password&amp;gt;${server.password}&amp;lt;/password&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uitvoeren met &lt;code&gt;mvn tomcat:deploy [-Denv=x]&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;
Voorbeelden en meer uitleg: &lt;a href=&#34;http://mojo.codehaus.org/tomcat-maven-plugin/&#34;&gt;http://mojo.codehaus.org/tomcat-maven-plugin/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;war-name-veranderen&#34;&gt;War name veranderen&lt;/h2&gt;

&lt;p&gt;Staat default op &lt;code&gt;${project.build.finalName}&lt;/code&gt; wat neerkomt op artifactId-version.war.&lt;/p&gt;

&lt;p&gt;Te veranderen door &lt;code&gt;&amp;lt;warName&amp;gt;blar&amp;lt;/warName&amp;gt;&lt;/code&gt; in &lt;code&gt;&amp;lt;configuration/&amp;gt;&lt;/code&gt; te plaatsen in de &lt;code&gt;maven-war-plugin&lt;/code&gt;.&lt;br/&gt;&lt;br/&gt;
&lt;strong&gt;Zonder&lt;/strong&gt; .war ext. dus.
Zie &lt;a href=&#34;http://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#warName&#34;&gt;http://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#warName&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;jar-source-code-downloaden&#34;&gt;Jar source code downloaden&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mvn dependency:sources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ook mogelijk in de pom door per dependency &lt;code&gt;downloadSources&lt;/code&gt; op &lt;code&gt;true&lt;/code&gt; te zetten, of via de &lt;code&gt;eclipse:eclipse&lt;/code&gt; goal plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;maven-eclipse-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;downloadSources&amp;gt;true&amp;lt;/downloadSources&amp;gt;
                &amp;lt;downloadJavadocs&amp;gt;true&amp;lt;/downloadJavadocs&amp;gt;
                ... other stuff ...
            &amp;lt;/configuration&amp;gt;
        &amp;lt;/plugin&amp;gt;
    &amp;lt;/plgins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vergeet niet dan als property &lt;code&gt;-DdownloadSources=true&lt;/code&gt; mee te geven.&lt;/p&gt;

&lt;h4 id=&#34;eclipse-eclipse-genereert-ook-de-project-file&#34;&gt;eclipse:eclipse genereert ook de .project file&lt;/h4&gt;

&lt;p&gt;Library dependencies worden daar automatisch aan toegevoegd, maar alles staat onder &lt;strong&gt;M2_REPO&lt;/strong&gt;/org/&amp;hellip;/bla.jar en Eclipse moet weten waar lokaal de repository staat. Zie ook &lt;a href=&#34;http://maven.apache.org/guides/mini/guide-ide-eclipse.html&#34;&gt;http://maven.apache.org/guides/mini/guide-ide-eclipse.html&lt;/a&gt; - Dit commando uitvoeren &amp;amp; eclipse herstarten:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mvn -Declipse.workspace=&amp;lt;path-to-eclipse-workspace&amp;gt; eclipse:add-maven-repo&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;automatisch-source-files-encoden&#34;&gt;Automatisch source files encoden&lt;/h4&gt;

&lt;p&gt;Je kan met die plugin ook extra configuratie meegeven die de &lt;code&gt;.java&lt;/code&gt; files qua encoding goed zet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;additionalConfig&amp;gt;
    ```
        &amp;lt;name&amp;gt;.settings/org.eclipse.core.resources.prefs&amp;lt;/name&amp;gt;
            &amp;lt;content&amp;gt;
                        &amp;lt;![CDATA[eclipse.preferences.version######1${line.separator}encoding/&amp;lt;project&amp;gt;${project.build.sourceEncoding}${line.separator}]]&amp;gt;
            &amp;lt;/content&amp;gt;
    ```
&amp;lt;/additionalConfig&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;dependency-tree-tonen&#34;&gt;Dependency tree tonen&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mvn dependency:tree &amp;gt; deptree.out
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Produceert rommel in het volgend formaat:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[INFO] [dependency:tree {execution: default-cli}]
[INFO] be.--api:jar:2.21-SNAPSHOT
[INFO] +- be.-support:jar:7.21-SNAPSHOT:compile
[INFO] |  +- org.easytesting:fest-assert:jar:1.2:test (scope managed from compile)
[INFO] |  |  &amp;lt;br/&amp;gt;- org.easytesting:fest-util:jar:1.1:test
[INFO] |  +- com.thoughtworks.xstream:xstream:jar:1.3.1:compile
[INFO] |  |  &amp;lt;br/&amp;gt;- xpp3:xpp3_min:jar:1.1.4c:compile
[INFO] |  +- javax.ws.rs:jsr311-api:jar:1.1.1:compile
[INFO] |  +- org.objenesis:objenesis:jar:1.2:compile
[INFO] |  +- net.sf.ehcache:ehcache:jar:1.6.0:compile
[INFO] |  +- log4j:log4j:jar:1.2.15:compile
[INFO] |  |  &amp;lt;br/&amp;gt;- javax.mail:mail:jar:1.4:compile
[INFO] |  +- commons-codec:commons-codec:jar:1.3:compile
[INFO] |  +- jmimemagic:jmimemagic:jar:0.1.2:compile
[INFO] |  |  +- oro:oro:jar:2.0.8:compile
[INFO] |  |  &amp;lt;br/&amp;gt;- commons-logging:commons-logging:jar:1.1.1:compile (version managed from 1.0.4)
[INFO] |  +- commons-io:commons-io:jar:1.4:compile
[INFO] |  +- org.htmlcleaner:htmlcleaner:jar:2.1:compile
..
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;een-bepaalde-test-draaien-via-maven&#34;&gt;Een bepaalde test draaien via Maven&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mvn test -Dtest=[testClass] -P [profile]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Waarbij &lt;code&gt;profile&lt;/code&gt; het profiel is die de surefire plugin heeft - bijvoorbeeld:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;profile&amp;gt;
    &amp;lt;id&amp;gt;endtoend&amp;lt;/id&amp;gt;
    &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
            &amp;lt;name&amp;gt;endtoend&amp;lt;/name&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/activation&amp;gt;
    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-surefire-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;phase&amp;gt;integration-test&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;test&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;testFailureIgnore&amp;gt;true&amp;lt;/testFailureIgnore&amp;gt;
                            &amp;lt;skip&amp;gt;false&amp;lt;/skip&amp;gt;
                            &amp;lt;argLine&amp;gt;-Xms128M -Xmx512M -XX:MaxPermSize=512M&amp;lt;/argLine&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&amp;lt;/profile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;❗ Als een bepaalde jar nog deployed moet worden (naar Jetty bvb) voor het runnen van de test (scenario testen zoals selenium en webdriver), moet de &lt;code&gt;install&lt;/code&gt; in plaats van &lt;code&gt;test&lt;/code&gt; goal uitgevoerd worden. &lt;br/&gt;&lt;br/&gt;
Het kan &lt;em&gt;ook&lt;/em&gt; zijn dat nog zaken geïnstalleerd moeten worden in de lokale Maven repository (het root project) -&amp;gt; eerst &lt;code&gt;mvn clean install&lt;/code&gt; op het root project doen (voor &lt;em&gt;vac&lt;/em&gt; is dit zo). Dit is omdat het endtoend project daarop afhangt, en de compile dan faalt.&lt;/p&gt;

&lt;h2 id=&#34;een-jar-manueel-in-de-repository-installeren&#34;&gt;Een jar manueel in de repository installeren&lt;/h2&gt;

&lt;p&gt;Gebruik het volgende commando:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;mvn install:install-file -Dfile######x.jar -DgroupIdcom.group -DartifactId######jarName -Dversion1.0.0 -Dpackaging=jar&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wens je dit in de &lt;strong&gt;remote repository&lt;/strong&gt; te installeren, gebruik dan &lt;code&gt;mvn deploy:deploy-file&lt;/code&gt; met als extra parameter de url van de repository via de &lt;code&gt;-Durl=repoUrl&lt;/code&gt; optie.&lt;/p&gt;

&lt;h2 id=&#34;de-maven-java-compiler-versie-goed-zetten&#34;&gt;De maven java compiler versie goed zetten&lt;/h2&gt;

&lt;p&gt;Gebeurt in een plugin in de &lt;code&gt;build&lt;/code&gt; fase:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;build&amp;gt;
        &amp;lt;finalName&amp;gt;test&amp;lt;/finalName&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;encoding&amp;gt;UTF-8&amp;lt;/encoding&amp;gt;
                    &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>releasing</title>
      <link>http://www.brainbaking.com/wiki/code/build/maven/releasing/</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/build/maven/releasing/</guid>
      <description>

&lt;h1 id=&#34;maven-releasing&#34;&gt;Maven Releasing&lt;/h1&gt;

&lt;p&gt;Opmerking: de te releasen code zetten onder een folder C:/xxx en niet te diep nesten (CVS kan te lange folder structuur niet uitchecken)&lt;/p&gt;

&lt;h4 id=&#34;hoe-een-maven-release-uitvoeren&#34;&gt;Hoe een maven release uitvoeren ?&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;(&lt;strong&gt;eenmalig uit te voeren&lt;/strong&gt; ❗) voor elke nieuwe release maken we op een gepast moment een CVS &amp;lsquo;maintenance release branch&amp;rsquo; waarop we de laatste bugfixen uitvoeren :

&lt;ol&gt;
&lt;li&gt;deze zal steeds de vorm &amp;lsquo;versiez_y_x&amp;rsquo; hebben waarbij we z_y vervangen door een TOP release nummer b.v. &amp;lsquo;versie2_7_x&amp;rsquo;&lt;/li&gt;
&lt;li&gt;deze branch wordt later ook gebruikt om maintenance releases op uit te voeren (emergency / extra TOP&amp;rsquo;s om bugfixes door te voeren)&lt;/li&gt;
&lt;li&gt;gebruik volgend maven commando om de branch aan te maken (gebruik wel de juiste branchname en username/password voor cvs !) :

&lt;ol&gt;
&lt;li&gt;CVS &amp;ndash;&amp;gt;   mvn release:branch -DupdateBranchVersions######true -DupdateWorkingCopyVersionstrue -DbranchName######versiez_y_x -DautoVersionSubmodulestrue -Dusername######xxxx -Dpasswordyyyyy&lt;/li&gt;
&lt;li&gt;SVN &amp;ndash;&amp;gt;   zelfde als CVS, maar zonder username en password&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;bij het uitvoeren van het commando komt maven vragen achter het versienummer in de branch en de nieuwe versie in de hoofdbranch.&lt;/li&gt;
&lt;li&gt;De branch versie nummer zal &amp;lsquo;z.y.0-SNAPSHOT&amp;rsquo; zijn (in dit voorbeeld &amp;lsquo;2.7.0-SNAPSHOT&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;De hoofdbranch versie zal &amp;lsquo;z.y+1-SNAPSHOT&amp;rsquo; zijn (in dit voorbeeld &amp;lsquo;2.8-SNAPSHOT&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;update het project via wincvs naar de correcte branch &amp;lsquo;versiez_y_x&amp;rsquo; (in het voorbeeld versie2_7_x).&lt;/li&gt;
&lt;li&gt;bereidt de nieuwe release voor door het commando mvn release:prepare -Dresume######false  -DpreparationGoals&amp;rdquo;clean install&amp;rdquo;  -DautoVersionSubmodules=true -Dusername######xxxx -Dpasswordyyyyy uit te voeren.&lt;/li&gt;
&lt;li&gt;Als dit niet lukt met de fout &amp;lsquo;address in use&amp;rsquo;, dan moet je de maven opts aanpassen (remote debugging weghalen). Maven zal je vragen achter de release versie nummer (in het voorbeeld wordt dit 2.7.0) en achter de volgende development versie (in het voorbeeld 2.7.1-SNAPSHOT).&lt;/li&gt;
&lt;li&gt;finaliseer de release via het commando mvn release:perform  -Dusername######xxxx -Dpasswordyyyyy&lt;/li&gt;
&lt;li&gt;pas de pom.xml van relevant projecten aan&lt;/li&gt;
&lt;li&gt;pas eventueel de prj/pom.xml &amp;amp; vdabbuild.xml aan om je EAR / WAR automatisch in de deployment TAR te stoppen.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;hoe-skip-ik-mijn-testen-bij-een-release&#34;&gt;Hoe skip ik mijn testen bij een release?&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;-Darguments=&amp;quot;-DskipTests&amp;quot;&lt;/code&gt; meegeven&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>appengine</title>
      <link>http://www.brainbaking.com/wiki/code/build/maven/appengine/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/build/maven/appengine/</guid>
      <description>

&lt;h1 id=&#34;maven-google-appengine&#34;&gt;Maven Google Appengine&lt;/h1&gt;

&lt;h4 id=&#34;maven-cli-plugin-gebruiken-als-semi-hot-deployer&#34;&gt;maven-cli-plugin gebruiken als semi-hot-deployer&lt;/h4&gt;

&lt;p&gt;Zie &lt;a href=&#34;http://blog.cloudme.org/2010/04/mavenizing-my-project/&#34;&gt;Mavenizing my project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In plaats van betalende JRebel kan je bvb. voor GAE de jetty server op zetten met &lt;code&gt;gae:run&lt;/code&gt;, maar alles in webapp ziet hij niet als een change.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Tab1: &lt;code&gt;mvn gae:run&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In Tab2: &lt;code&gt;mvn cli:execute&lt;/code&gt; en dan commando&amp;rsquo;s &lt;code&gt;compile war&lt;/code&gt; in aparte tab die de eerste tab (nog actieve maven) oppikt dan.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Andere mogelijkheid is natuurlijk voor niet-GAE dingen, &lt;code&gt;jetty:run&lt;/code&gt; gebruiken (zie &lt;a href=&#34;http://www.brainbaking.com/wiki/code/build/maven/&#34;&gt;code/build/maven&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;❗ de plugin is &lt;strong&gt;niet werkend met maven 3&lt;/strong&gt;, zie &lt;a href=&#34;https://github.com/mrdon/maven-cli-plugin/wiki/Maven-3.0-Support&#34;&gt;https://github.com/mrdon/maven-cli-plugin/wiki/Maven-3.0-Support&lt;/a&gt; -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO]
[INFO] --- maven-cli-plugin:1.0.6:execute (default-cli) @ gatecontrolweb ---
[INFO] Waiting for commands...
maven2&amp;gt; clean
[INFO] Executing: org.apache.maven.plugins:maven-clean-plugin [clean]
[ERROR] Unable to complete running command: clean
java.lang.RuntimeException: org.apache.maven.plugin.MojoExecutionException: Unable to execute mojo
    at org.twdata.maven.cli.commands.ExecuteGoalCommand.run(ExecuteGoalCommand.java:111)
    at org.twdata.maven.cli.CliShell.interpretCommand(CliShell.java:48)
    at org.twdata.maven.cli.CliShell.run(CliShell.java:29)
    at org.twdata.maven.cli.AbstractCliMojo.displayShell(AbstractCliMojo.java:144)
    at org.twdata.maven.cli.AbstractCliMojo.access$000(AbstractCliMojo.java:22)
    at org.twdata.maven.cli.AbstractCliMojo$1.run(AbstractCliMojo.java:116)
Caused by: org.apache.maven.plugin.MojoExecutionException: Unable to execute mojo
    at org.shaded.mojoexecutor.MojoExecutor.executeMojo(MojoExecutor.java:106)
    at org.twdata.maven.cli.MojoCall.run(MojoCall.java:31)
    at org.twdata.maven.cli.commands.ExecuteGoalCommand.runMojo(ExecuteGoalCommand.java:125)
    at org.twdata.maven.cli.commands.ExecuteGoalCommand.run(ExecuteGoalCommand.java:104)
    ... 5 more
Caused by: java.lang.UnsupportedOperationException
    at org.apache.maven.plugin.internal.DefaultPluginManager.executeMojo(DefaultPluginManager.java:90)
    at org.shaded.mojoexecutor.MojoExecutor.executeMojo(MojoExecutor.java:104)
    ... 8 more
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tof&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;maven-endpoint-plugin&#34;&gt;maven-endpoint-plugin&lt;/h4&gt;

&lt;p&gt;❗ Google App Engine &lt;strong&gt;endpoint metadata&lt;/strong&gt; genereren via maven kan ook en is een totaal andere plugin: &lt;a href=&#34;http://code.google.com/p/maven-endpoint-plugin/&#34;&gt;http://code.google.com/p/maven-endpoint-plugin/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hiervoor moet je de volgende repository gebruiken (zit niet in de central repo):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;    &amp;lt;repositories&amp;gt;
        &amp;lt;repository&amp;gt;
            &amp;lt;id&amp;gt;cbreleases&amp;lt;/id&amp;gt;
            &amp;lt;url&amp;gt;https://repository-michael.forge.cloudbees.com/release&amp;lt;/url&amp;gt;
            &amp;lt;releases&amp;gt;
                &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
            &amp;lt;/releases&amp;gt;
            &amp;lt;snapshots&amp;gt;
                &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
            &amp;lt;/snapshots&amp;gt;
        &amp;lt;/repository&amp;gt;
    &amp;lt;/repositories&amp;gt;
    &amp;lt;pluginRepositories&amp;gt;
        &amp;lt;pluginRepository&amp;gt;
            &amp;lt;id&amp;gt;cbreleases&amp;lt;/id&amp;gt;
            &amp;lt;url&amp;gt;https://repository-michael.forge.cloudbees.com/release&amp;lt;/url&amp;gt;
            &amp;lt;releases&amp;gt;
                &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
            &amp;lt;/releases&amp;gt;
            &amp;lt;snapshots&amp;gt;
                &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
            &amp;lt;/snapshots&amp;gt;
        &amp;lt;/pluginRepository&amp;gt;
    &amp;lt;/pluginRepositories&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;maven-gae-plugin&#34;&gt;maven-gae-plugin&lt;/h4&gt;

&lt;p&gt;Laatste versie van de &amp;ldquo;officiele&amp;rdquo; plugin op &lt;a href=&#34;https://github.com/maven-gae-plugin/maven-gae-plugin&#34;&gt;https://github.com/maven-gae-plugin/maven-gae-plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Een compleet voorbeeld gebaseerd op de jsp archetype:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version######&amp;quot;1.0&amp;quot; encoding&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns######&amp;quot;http:*maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi&amp;quot;http:*www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http:*maven.apache.org/POM/4.0.0 http:*maven.apache.org/maven-v4_0_0.xsd&amp;quot;&amp;gt;
  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

  &amp;lt;!-- The Basics --&amp;gt;
  &amp;lt;groupId&amp;gt;com.myapp.test&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;testapp&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;

  &amp;lt;name&amp;gt;lkjm&amp;lt;/name&amp;gt;

    &amp;lt;dependencies&amp;gt;

    &amp;lt;!-- Google App Engine meta-package --&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;net.kindleit&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;gae-runtime&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;${gae.version}&amp;lt;/version&amp;gt;
      &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
    &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.datanucleus&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;datanucleus-core&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${datanucleus.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;javax.transaction&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jta&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.1&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!--
            J2EE Servlet API. We need it to compile IndexServlet class. You can
            probably remove it, if you don&#39;t explicitly use Servlets
        --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.geronimo.specs&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;geronimo-servlet_2.5_spec&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!--
            Make use of JSP tags. Remove, if you don&#39;t use JSPs
        --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;artifactId&amp;gt;standard&amp;lt;/artifactId&amp;gt;
            &amp;lt;groupId&amp;gt;taglibs&amp;lt;/groupId&amp;gt;
            &amp;lt;version&amp;gt;1.1.2&amp;lt;/version&amp;gt;
            &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;
            &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- These dependencies are here just for enabling logging --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;ch.qos.logback&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;logback-classic&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;0.9.24&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- Test scope --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.5&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!--
            GAE libraries for local testing as described here:
            http://code.google.com/appengine/docs/java/howto/unittesting.html
        --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.google.appengine&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;appengine-api-labs&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${gae.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.google.appengine&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;appengine-api-stubs&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${gae.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.google.appengine&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;appengine-testing&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${gae.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;javax.jdo&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jdo2-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.3-eb&amp;lt;/version&amp;gt;
            &amp;lt;exclusions&amp;gt;
                &amp;lt;exclusion&amp;gt;
                    &amp;lt;groupId&amp;gt;javax.transaction&amp;lt;/groupId&amp;gt;
                    &amp;lt;artifactId&amp;gt;transaction-api&amp;lt;/artifactId&amp;gt;
                &amp;lt;/exclusion&amp;gt;
            &amp;lt;/exclusions&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;!--
                This plug-in &amp;quot;enhances&amp;quot; your domain model objects (i.e. makes them
                persistent for datanucleus)
            --&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.datanucleus&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-datanucleus-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;1.1.4&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;!--
                        Make sure this path contains your persistent classes!
                    --&amp;gt;
                    &amp;lt;mappingIncludes&amp;gt;**/model/*.class&amp;lt;/mappingIncludes&amp;gt;
                    &amp;lt;verbose&amp;gt;true&amp;lt;/verbose&amp;gt;
                    &amp;lt;enhancerName&amp;gt;ASM&amp;lt;/enhancerName&amp;gt;
                    &amp;lt;api&amp;gt;JDO&amp;lt;/api&amp;gt;
                &amp;lt;/configuration&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;phase&amp;gt;compile&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;enhance&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
                &amp;lt;dependencies&amp;gt;
                    &amp;lt;dependency&amp;gt;
                        &amp;lt;groupId&amp;gt;org.datanucleus&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;datanucleus-core&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;${datanucleus.version}&amp;lt;/version&amp;gt;
                        &amp;lt;exclusions&amp;gt;
                            &amp;lt;exclusion&amp;gt;
                                &amp;lt;groupId&amp;gt;javax.transaction&amp;lt;/groupId&amp;gt;
                                &amp;lt;artifactId&amp;gt;transaction-api&amp;lt;/artifactId&amp;gt;
                            &amp;lt;/exclusion&amp;gt;
                        &amp;lt;/exclusions&amp;gt;
                    &amp;lt;/dependency&amp;gt;
                    &amp;lt;dependency&amp;gt;
                        &amp;lt;groupId&amp;gt;org.datanucleus&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;datanucleus-rdbms&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;${datanucleus.version}&amp;lt;/version&amp;gt;
                    &amp;lt;/dependency&amp;gt;
                    &amp;lt;dependency&amp;gt;
                        &amp;lt;groupId&amp;gt;org.datanucleus&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;datanucleus-enhancer&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;1.1.4&amp;lt;/version&amp;gt;
                    &amp;lt;/dependency&amp;gt;
                    &amp;lt;dependency&amp;gt;
                        &amp;lt;groupId&amp;gt;javax.jdo&amp;lt;/groupId&amp;gt;
                        &amp;lt;artifactId&amp;gt;jdo2-api&amp;lt;/artifactId&amp;gt;
                        &amp;lt;version&amp;gt;2.3-ec&amp;lt;/version&amp;gt;
                        &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
                    &amp;lt;/dependency&amp;gt;
                &amp;lt;/dependencies&amp;gt;
            &amp;lt;/plugin&amp;gt;

            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.1-beta-1&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;webResources&amp;gt;
                        &amp;lt;resource&amp;gt;
                            &amp;lt;directory&amp;gt;src/main/webapp&amp;lt;/directory&amp;gt;
                            &amp;lt;filtering&amp;gt;true&amp;lt;/filtering&amp;gt;
                            &amp;lt;includes&amp;gt;
                                &amp;lt;include&amp;gt;**/appengine-web.xml&amp;lt;/include&amp;gt;
                            &amp;lt;/includes&amp;gt;
                        &amp;lt;/resource&amp;gt;
                    &amp;lt;/webResources&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;

            &amp;lt;!--
                The actual maven-gae-plugin. Type &amp;quot;mvn gae:run&amp;quot; to run project, &amp;quot;mvn
                gae:deploy&amp;quot; to upload to GAE.
            --&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;net.kindleit&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-gae-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;0.9.5&amp;lt;/version&amp;gt;
            &amp;lt;/plugin&amp;gt;

            &amp;lt;!--
                Upload application to the appspot automatically, during
                release:perform
            --&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-release-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;goals&amp;gt;gae:deploy&amp;lt;/goals&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;

            &amp;lt;!-- Java compiler version --&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.0&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;

    &amp;lt;!-- Specify hard-coded project properties here --&amp;gt;
    &amp;lt;properties&amp;gt;

      &amp;lt;!-- Sets the project&#39;s default encoding.
         http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding --&amp;gt;
    &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;

        &amp;lt;!--
            This is just for &amp;quot;eclipse:eclipse&amp;quot; goal to always attempt downloading
            sources
        --&amp;gt;
        &amp;lt;downloadSources&amp;gt;true&amp;lt;/downloadSources&amp;gt;

        &amp;lt;!--
            Specify AppEngine version for your project. It should match SDK
            version pointed to by ${gae.home} property (Typically, one used by
            your Eclipse plug-in)
        --&amp;gt;
        &amp;lt;gae.version&amp;gt;1.6.5&amp;lt;/gae.version&amp;gt;

        &amp;lt;!--
            Upload to http://test.latest.&amp;lt;applicationName&amp;gt;.appspot.com by default
        --&amp;gt;
        &amp;lt;gae.application.version&amp;gt;test&amp;lt;/gae.application.version&amp;gt;

        &amp;lt;datanucleus.version&amp;gt;1.1.5&amp;lt;/datanucleus.version&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;profiles&amp;gt;
        &amp;lt;!--
            We can configure our integration server to activate this profile and
            perform gae:deploy, thus uploading latest snapshot to the
            http://1.latest.&amp;lt;applicationName&amp;gt;.appspot.com automatically
        --&amp;gt;
        &amp;lt;profile&amp;gt;
            &amp;lt;id&amp;gt;integration-build&amp;lt;/id&amp;gt;
            &amp;lt;properties&amp;gt;
                &amp;lt;gae.application.version&amp;gt;stage&amp;lt;/gae.application.version&amp;gt;
            &amp;lt;/properties&amp;gt;
        &amp;lt;/profile&amp;gt;

        &amp;lt;!--
            This profile will activate automatically during release and upload
            application to the http://2.latest.&amp;lt;applicationName&amp;gt;.appspot.com (We
            might want to set the 2nd version as our applications Default version
            to be accessible at http://&amp;lt;applicationName&amp;gt;.appspot.com)
        --&amp;gt;
        &amp;lt;profile&amp;gt;
            &amp;lt;id&amp;gt;release-build&amp;lt;/id&amp;gt;
            &amp;lt;activation&amp;gt;
                &amp;lt;property&amp;gt;
                    &amp;lt;name&amp;gt;performRelease&amp;lt;/name&amp;gt;
                    &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;
                &amp;lt;/property&amp;gt;
            &amp;lt;/activation&amp;gt;

            &amp;lt;properties&amp;gt;
                &amp;lt;!--
                    During release, set application version in appengine-web.xml to 2
                --&amp;gt;
                &amp;lt;gae.application.version&amp;gt;release&amp;lt;/gae.application.version&amp;gt;
            &amp;lt;/properties&amp;gt;
        &amp;lt;/profile&amp;gt;
    &amp;lt;/profiles&amp;gt;

&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hiermee kan je:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mvn gae:unpack&lt;/code&gt; uitvoeren om de GAE SDK in uw maven repo te unpacken zodat &lt;code&gt;${gae.home}&lt;/code&gt; niet nodig is in de pom (vanaf 0.9.5)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mvn gae:run&lt;/code&gt; uitvoeren om een devserver te starten&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&#34;andere-versie&#34;&gt;Andere versie&lt;/h5&gt;

&lt;p&gt;Een oudere versie (??) is deze:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;com.google.appengine&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;appengine-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${appengine.target.version}&amp;lt;/version&amp;gt;
            &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hiermee kan je:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mvn appengine:devserver&lt;/code&gt; gebruiken om lokaal een jetty op te starten, en&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mvn appengine:update&lt;/code&gt; om te deployen via de commandline.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>