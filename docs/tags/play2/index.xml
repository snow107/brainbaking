<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Play2 on Brain Baking</title>
    <link>http://www.brainbaking.com/tags/play2/</link>
    <description>Recent content in Play2 on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Tue, 12 Mar 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.brainbaking.com/tags/play2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>play2</title>
      <link>http://www.brainbaking.com/wiki/code/java/play2/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>http://www.brainbaking.com/wiki/code/java/play2/</guid>
      <description>Play 2.0 Testing in Play 2.0 Controller testen een controller &amp;ldquo;action&amp;rdquo; (= method vanuit route) testen doen we op een &amp;ldquo;functionele&amp;rdquo; manier in plaats van de method direct aan te roepen:
controller
public static Result buyHorse() { Form&amp;lt;Horse&amp;gt; horseForm = form(Horse.class); Horse horse = horseForm.bindFromRequest().get(); System.out.println(horse.id); }  unit test
@Test public void buyHorse() { HashMap&amp;lt;String, String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); map.put(&amp;quot;id&amp;quot;, &amp;quot;12&amp;quot;); callAction(HorseMarket.buyHorse(), new FakeRequest().withFormUrlEncodedBody(map)); }  Waarbij hierboven HorseMarket de routes ref is en niet de HorseMarket controller klasse zelf - deze:</description>
    </item>
    
  </channel>
</rss>