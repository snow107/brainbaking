<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linq on Brain Baking</title>
    <link>https://brainbaking.com/tags/linq/</link>
    <description>Recent content in Linq on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Wed, 29 Jan 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brainbaking.com/tags/linq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>linq</title>
      <link>https://brainbaking.com/wiki/code/csharp/linq/</link>
      <pubDate>Wed, 29 Jan 2014 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/wiki/code/csharp/linq/</guid>
      <description>Collections, Iterating, ???, Linq (profit) yield hocus pocus Zie The implementation of iterators in C# - wordt uitgelegd hoe yield door de compiler geïnterpreteerd wordt.
Hiermee is het mogelijk om heel snel uw eigen IEnumerable te maken.
 “yield”, [&amp;hellip;] which allows you to quickly write iterators without worrying about preserving state.
 Folding, selecting, etc Closing over the loop variable Main article: http://blogs.msdn.com/b/ericlippert/archive/2009/11/12/closing-over-the-loop-variable-considered-harmful.aspx
Opgelet met foreach en de manier waarop die geïmplementeerd is (onder C# 5):</description>
    </item>
    
  </channel>
</rss>